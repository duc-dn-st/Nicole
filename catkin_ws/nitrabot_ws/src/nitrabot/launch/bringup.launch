<launch>
    <arg name="robot_port" default="/dev/ttyUSB1" />
    <arg name="lidar2d" default="true" />
    <group if="$(arg lidar2d)">
         <!-- Start RPLIDAR sensor node which provides LaserScan data  -->
        <node name="rplidarNode" pkg="rplidar_ros" type="rplidarNode" output="screen">
        <param name="serial_port" type="string" value="/dev/ttyUSB0"/>
        <param name="serial_baudrate" type="int" value="256000"/>
        <param name="frame_id" type="string" value="laser"/>
        <param name="inverted" type="bool" value="false"/>
        <param name="angle_compensate" type="bool" value="true"/>
        </node>



  <node pkg="laser_filters" type="scan_to_scan_filter_chain"
      name="laser_filter">
    <rosparam command="load" file="my_laser_config.yaml" />
  </node>
  
        <node pkg="tf" type="static_transform_publisher" name="lidar_to_base_link" args="0.3 0 0 0 0 0 base_link laser 100" /> 


    </group>
    <group unless="$(arg lidar2d)">
        <include file="$(find nitra_robot)/launch/3d_lidar.launch"/>

        <!--<node pkg="tf" type="static_transform_publisher" name="velodyne_to_laser" args="0 0 0 0 0 0 /laser /velodyne 100" />--> 

        <node pkg="tf" type="static_transform_publisher" name="velodyne_to_base_link" args="0.3 0 0 0 0 0 base_link laser 100" /> 
        
    </group> 
    
    <!--<include file="$(find rt_usb_9axisimu_driver)/launch/rt_usb_9axisimu_driver.launch"/>

    <node name="imu_filter_node" pkg="imu_filter_madgwick" type="imu_filter_node" output="screen">
        <remap from="imu/data" to="imu"/>
        <param name="publish_tf" value="false"/>
    </node>


    <node pkg="tf" type="static_transform_publisher" name="imu_link_to_base_footprint" args="0 0 0 0 0 0 /base_link /imu_link 100" /> 
-->

    <!-- launch communication with the robot -->
    <node name="robot_communication" pkg="industrial_robot_qt" type="robot_communication" >
        <param name="port" value="$(arg robot_port)" />
    </node>
    <node name="encoder_to_odom" pkg="industrial_robot_qt" type="encoder_to_odom" />
    <!-- START LOGGER -->
    <node pkg="logger" type="logger" name="pose_logger"/>
</launch>
